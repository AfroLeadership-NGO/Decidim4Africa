services:
  app:
    build: .
    restart: always
    ports:
      - 3000
    volumes:
      - decidim_data:/app/public/uploads
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - RAILS_ENV=${RAILS_ENV}
      - RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - SMTP_ADDRESS=${SMTP_ADDRESS}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_DOMAIN=${SMTP_DOMAIN}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_AUTHENTICATION=${SMTP_AUTHENTICATION}
      - SMTP_STARTTLS_AUTO=${SMTP_STARTTLS_AUTO}
      - DECIDIM_MAILER_SENDER=${DECIDIM_MAILER_SENDER}
      - MAPS_PROVIDER=${MAPS_PROVIDER}
      - MAPS_API_KEY=${MAPS_API_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DECIDIM_ENABLE_ETIQUETTE_VALIDATOR=${DECIDIM_ENABLE_ETIQUETTE_VALIDATOR}
      - DECIDIM_SPAM_DETECTION_BACKEND_USER=${DECIDIM_SPAM_DETECTION_BACKEND_USER}
      - DECIDIM_SPAM_DETECTION_BACKEND_RESOURCE=${DECIDIM_SPAM_DETECTION_BACKEND_RESOURCE}
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.decidim-app.tls.domains[0].main=nousparticipons.org"
      - "traefik.http.routers.decidim-app.tls.domains[0].sans=*.nousparticipons.org"
      - "traefik.http.routers.decidim-app.rule=Host(`*.nousparticipons.org`)"
      - "traefik.http.routers.decidim-app.entrypoints=websecure"
      - "traefik.http.routers.decidim-app.tls.certResolver=letsencrypt"
      - "traefik.http.services.decidim-app.loadbalancer.server.port=3000"
    command: bundle exec rails server
    
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - dokploy-network

  sidekiq:
    build: .
    restart: always
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - RAILS_ENV=${RAILS_ENV}
      - RAILS_LOG_TO_STDOUT=${RAILS_LOG_TO_STDOUT}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - SMTP_ADDRESS=${SMTP_ADDRESS}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_DOMAIN=${SMTP_DOMAIN}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_AUTHENTICATION=${SMTP_AUTHENTICATION}
      - SMTP_STARTTLS_AUTO=${SMTP_STARTTLS_AUTO}
      - DECIDIM_MAILER_SENDER=${DECIDIM_MAILER_SENDER}
      - MAPS_PROVIDER=${MAPS_PROVIDER}
      - MAPS_API_KEY=${MAPS_API_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DECIDIM_ENABLE_ETIQUETTE_VALIDATOR=${DECIDIM_ENABLE_ETIQUETTE_VALIDATOR}
      - DECIDIM_SPAM_DETECTION_BACKEND_USER=${DECIDIM_SPAM_DETECTION_BACKEND_USER}
      - DECIDIM_SPAM_DETECTION_BACKEND_RESOURCE=${DECIDIM_SPAM_DETECTION_BACKEND_RESOURCE}
    networks:
      - dokploy-network
    command: bundle exec sidekiq
    
  redis:
    image: redis:6
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - dokploy-network

volumes:
  postgres_data:
  decidim_data:
  redis_data:
  
networks:
  dokploy-network:
    external: true
